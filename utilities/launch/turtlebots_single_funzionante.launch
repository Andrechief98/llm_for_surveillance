<launch>
  <!-- Argomenti per il namespace e per il file world -->
  <arg name="namespace" default="turtlebot3_1"/>
  <arg name="world_file" default="$(find tim_utilities)/worlds/Tim_building_world.world"/>
  
  <!-- Avvio di Gazebo con il world personalizzato -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_file)"/>
  </include>

  <node pkg="tf" type="static_transform_publisher" name="map_to_world_broadcaster"
    args="0 0 0 0 0 0 map $(arg namespace)/map 100" />
  
  <!-- Nodi relativi al TurtleBot3 sotto il namespace indicato -->
  <group ns="$(arg namespace)">
    <!-- URDF + Robot State Publisher -->
    <param name="robot_description" command="$(find xacro)/xacro '$(find turtlebot3_description)/urdf/turtlebot3_burger.urdf.xacro'" />
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>
    <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher"/>

    <!-- Spawn in Gazebo -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_turtlebot3" output="screen"
          args="-urdf -model turtlebot3_burger -x 0.0 -y 0.0 -z 0.0 -param robot_description"/>

    <!-- Map server -->
    <node pkg="map_server" name="map_server" type="map_server" args="$(find tim_utilities)/config/maps/turtlebot3_1_map.yaml">
      <param name="frame_id" value="map" />
    </node>

    <!-- Move base -->
    <node pkg="move_base" type="move_base" name="move_base" output="screen">
      <rosparam file="$(find interbotix_xslocobot_nav)/config/local_costmap_all_params.yaml" command="load"/>
      <rosparam file="$(find interbotix_xslocobot_nav)/config/global_costmap_all_params.yaml" command="load"/>
      <rosparam file="$(find interbotix_xslocobot_nav)/config/common_costmap_params.yaml" command="load" ns="global_costmap"/>
      <rosparam file="$(find interbotix_xslocobot_nav)/config/common_costmap_params.yaml" command="load" ns="local_costmap"/>
      <rosparam file="$(find interbotix_xslocobot_nav)/config/local_planner_params.yaml"  command="load"/>
      <rosparam file="$(find interbotix_xslocobot_nav)/config/global_planner_params.yaml" command="load"/>
      <rosparam file="$(find interbotix_xslocobot_nav)/config/move_base_params.yaml"      command="load"/>


      <param name="global_costmap/robot_base_frame" value="base_footprint"/>
      <param name="local_costmap/global_frame"      value="map"/>
      <param name="local_costmap/robot_base_frame"  value="base_footprint"/>

      <remap from="cmd_vel"                         to="cmd_vel"/>
      <remap from="map"                             to="map"/>
      <remap from="odom"                            to="odom"/>
    </node>

    <!-- AMCL -->
    <node name="amcl" pkg="amcl" type="amcl" output="screen">
      <param name="base_frame_id" value="base_link"/>
      <param name="odom_frame_id" value="odom"/>
      <param name="global_frame_id" value="map"/>
    </node>

    <node pkg="rviz" type="rviz" name="rviz" />

  </group>
  
  
  
  <!-- Se desideri lanciare un teleop per il controllo manuale, puoi aggiungere questo nodo.
       Notare che per testare in modalità simulata è consigliabile lanciare il teleop in un terminale a parte -->
  <!-- <node pkg="turtlebot3_teleop" type="turtlebot3_teleop_key" name="teleop" output="screen"/> -->
</launch>
